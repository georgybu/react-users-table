[{"/Users/yegor/Projects/intvw/users-table/src/index.tsx":"1","/Users/yegor/Projects/intvw/users-table/src/reportWebVitals.ts":"2","/Users/yegor/Projects/intvw/users-table/src/App.tsx":"3","/Users/yegor/Projects/intvw/users-table/src/Router.tsx":"4","/Users/yegor/Projects/intvw/users-table/src/pages/Auth/Auth.tsx":"5","/Users/yegor/Projects/intvw/users-table/src/config/api.map.ts":"6","/Users/yegor/Projects/intvw/users-table/src/utils/apiService.ts":"7","/Users/yegor/Projects/intvw/users-table/src/redux/store.ts":"8","/Users/yegor/Projects/intvw/users-table/src/redux/root.reducer.ts":"9","/Users/yegor/Projects/intvw/users-table/src/pages/HomePage/HomePage.tsx":"10","/Users/yegor/Projects/intvw/users-table/src/redux/reducers/login.reducer.ts":"11","/Users/yegor/Projects/intvw/users-table/src/redux/reducers/users.reducer.ts":"12","/Users/yegor/Projects/intvw/users-table/src/redux/constants/users.constants.ts":"13","/Users/yegor/Projects/intvw/users-table/src/redux/constants/login.constants.ts":"14","/Users/yegor/Projects/intvw/users-table/src/utils/patterns.ts":"15","/Users/yegor/Projects/intvw/users-table/src/redux/actions/login.actions.ts":"16","/Users/yegor/Projects/intvw/users-table/src/redux/actions/users.actions.ts":"17","/Users/yegor/Projects/intvw/users-table/src/components/UsersTable/UsersTable.tsx":"18","/Users/yegor/Projects/intvw/users-table/src/components/UsersTable/UsersTable.config.ts":"19","/Users/yegor/Projects/intvw/users-table/src/components/SearchBar/SearchBar.tsx":"20","/Users/yegor/Projects/intvw/users-table/src/pages/EditUser/EditUser.tsx":"21","/Users/yegor/Projects/intvw/users-table/src/components/EmptyData/Empty.tsx":"22","/Users/yegor/Projects/intvw/users-table/src/interfaces/core.interfaces.ts":"23"},{"size":588,"mtime":1613243616385,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1610543573280,"results":"26","hashOfConfig":"25"},{"size":151,"mtime":1610548839394,"results":"27","hashOfConfig":"25"},{"size":963,"mtime":1613595513802,"results":"28","hashOfConfig":"25"},{"size":2250,"mtime":1613595631310,"results":"29","hashOfConfig":"25"},{"size":447,"mtime":1613570476810,"results":"30","hashOfConfig":"25"},{"size":581,"mtime":1613577500895,"results":"31","hashOfConfig":"25"},{"size":297,"mtime":1613238679867,"results":"32","hashOfConfig":"25"},{"size":478,"mtime":1613299711243,"results":"33","hashOfConfig":"25"},{"size":1001,"mtime":1613595637220,"results":"34","hashOfConfig":"25"},{"size":386,"mtime":1613299711212,"results":"35","hashOfConfig":"25"},{"size":2876,"mtime":1613583391507,"results":"36","hashOfConfig":"25"},{"size":237,"mtime":1613582836767,"results":"37","hashOfConfig":"25"},{"size":29,"mtime":1613299711211,"results":"38","hashOfConfig":"25"},{"size":43,"mtime":1613299912978,"results":"39","hashOfConfig":"25"},{"size":692,"mtime":1613417916681,"results":"40","hashOfConfig":"25"},{"size":1893,"mtime":1613583004857,"results":"41","hashOfConfig":"25"},{"size":3057,"mtime":1613594915215,"results":"42","hashOfConfig":"25"},{"size":505,"mtime":1613427360529,"results":"43","hashOfConfig":"25"},{"size":885,"mtime":1613420802047,"results":"44","hashOfConfig":"25"},{"size":2073,"mtime":1613595631310,"results":"45","hashOfConfig":"25"},{"size":223,"mtime":1613593687409,"results":"46","hashOfConfig":"25"},{"size":412,"mtime":1613594228515,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1dmdbl7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/yegor/Projects/intvw/users-table/src/index.tsx",[],["99","100"],"/Users/yegor/Projects/intvw/users-table/src/reportWebVitals.ts",[],"/Users/yegor/Projects/intvw/users-table/src/App.tsx",[],"/Users/yegor/Projects/intvw/users-table/src/Router.tsx",[],"/Users/yegor/Projects/intvw/users-table/src/pages/Auth/Auth.tsx",["101"],"import styles from './Auth.module.scss';\nimport { useForm } from \"react-hook-form\";\nimport {isEmpty} from 'lodash';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/login.actions';\nimport {emailPattern} from '../../utils/patterns';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { register, handleSubmit, errors } = useForm({mode: 'onChange'}); \n    \n    useEffect(() => {\n        history.location.pathname !== '/login' && history.push('/login');\n    }, [])\n\n    const onSubmit = (data:any) => {\n        dispatch(login(data));\n    };\n    \n    return (\n        <div className={styles.container}>\n            <form className={styles.userForm} onSubmit={handleSubmit(onSubmit)}>\n                <div className={styles.formField}>\n                    <input name=\"email\" placeholder=\"Email\" ref={register({ pattern: {value: emailPattern, message: 'Invalid Email'}, required: true })} /> \n                    {errors.email && <span className={styles.error}>{errors.email?.type === 'pattern' ? 'Invalid email.' : 'Email is required.'}</span>}\n                </div>\n                <div className={styles.formField}>\n                    <input name=\"firstname\" placeholder=\"First name\" ref={register({ required: true })} /> \n                    {errors.firstname && <span className={styles.error}>{'First name is required.'}</span>}\n                </div>\n                <div className={styles.formField}>\n                    <input name=\"lastname\" placeholder=\"Last name\" ref={register({ required: true })} />\n                    {errors.lastname && <span className={styles.error}>{'Last name is required.'}</span>}\n                </div>\n                <div className={styles.formField}>\n                    <input name=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\n                    {errors.password && <span className={styles.error}>{'Password is required.'}</span>}\n                </div>\n                <input className={styles.btnOk} type=\"submit\" disabled={!isEmpty(errors)} />\n            </form>\n        </div>\n    )\n}\n\nexport default Auth;","/Users/yegor/Projects/intvw/users-table/src/config/api.map.ts",[],"/Users/yegor/Projects/intvw/users-table/src/utils/apiService.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/store.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/root.reducer.ts",[],"/Users/yegor/Projects/intvw/users-table/src/pages/HomePage/HomePage.tsx",["102","103"],"import { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\nimport UsersTable from \"../../components/UsersTable/UsersTable\";\nimport { getUsersData, searchUsers, sortUsers } from \"../../redux/actions/users.actions\";\nimport styles from './HomePage.module.scss';\n\nconst HomePage = () => {\n    const dispatch = useDispatch();\n    const { users } = useSelector((state: any) => state.users)\n    \n    useEffect(() => {\n        dispatch(getUsersData())\n    }, [])\n    \n    const onSearchChange = useCallback((val: string) => {\n        dispatch(searchUsers(val)); \n    }, []);\n\n    const onSortHandler = (obj: {sortBy: string, sortDir: string}) => {\n        dispatch(sortUsers(obj))\n    }\n\n   return (\n       <div className={styles.container}>\n           <SearchBar onSearch={onSearchChange} />\n           <UsersTable users={users} onSort={onSortHandler}/>\n       </div>\n   )\n\n}\nexport default HomePage;\n","/Users/yegor/Projects/intvw/users-table/src/redux/reducers/login.reducer.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/reducers/users.reducer.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/constants/users.constants.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/constants/login.constants.ts",[],"/Users/yegor/Projects/intvw/users-table/src/utils/patterns.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/actions/login.actions.ts",[],"/Users/yegor/Projects/intvw/users-table/src/redux/actions/users.actions.ts",[],"/Users/yegor/Projects/intvw/users-table/src/components/UsersTable/UsersTable.tsx",["104","105"],"import { useHistory } from \"react-router-dom\";\nimport { SortDirEnum, TableColumn, UsersData } from \"../../interfaces/core.interfaces\";\nimport columnsConfig from \"./UsersTable.config\";\nimport styles from './UsersTable.module.scss';\nimport arrUp from '../../assets/icons/arrowUp.png';\nimport arrDown from '../../assets/icons/arrowDown.png';\nimport EmptyData from \"../EmptyData/Empty\";\nimport { useSelector } from \"react-redux\";\nimport classNames from 'classnames';\n\ninterface UsersTableProps {\n    users: UsersData[],\n    onSort: (obj: {sortBy: string, sortDir: string}) => void;\n}\n\nconst UsersTable = ({users, onSort}: UsersTableProps) => {\n    const history = useHistory()\n    const { sortBy, sortDir } = useSelector((state: any) => state.users);\n\n    const onRowClick = (user: UsersData) => {\n        history.push({\n            pathname: `/edit/${user.id}`,\n            state: { userId: user.id }\n          })\n    }\n\n    return (\n        <div className={styles.container}>\n            <table className={styles.table}>\n                <thead>\n                    <tr>\n                    {columnsConfig.map((column: TableColumn, idx: number) => (\n                        <th key={idx}>\n                            <div className={styles.header}>\n                                <div>{column.title}</div>\n                                {column.isSortable && \n                                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                                        <div className={classNames({[styles.selectedArrow]: sortDir === SortDirEnum.ASC && sortBy === column.fieldName}, styles.arrow)} \n                                            onClick={() => onSort({sortBy: column.fieldName, sortDir: SortDirEnum.ASC})}>\n                                                <img width={10} height={10} src={arrUp}/>\n                                        </div>\n                                        <div className={classNames({[styles.selectedArrow]: sortDir=== SortDirEnum.DESC && sortBy === column.fieldName}, styles.arrow)} \n                                            onClick={() => onSort({sortBy: column.fieldName, sortDir: SortDirEnum.DESC})}>\n                                                <img width={10} height={10} src={arrDown}/>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        </th>\n                    ))}\n                    </tr>\n                </thead>\n                <tbody >\n                        {users.length ? users.map((user: any) => (\n                        <tr key={user.id} onClick={() => onRowClick(user)}>\n                            {columnsConfig.map((column: TableColumn, idx: number) => (\n                            <td key={idx}>{user[column.fieldName]}</td>\n                            ))}\n                        </tr>\n                        )) : <EmptyData />}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UsersTable;","/Users/yegor/Projects/intvw/users-table/src/components/UsersTable/UsersTable.config.ts",[],"/Users/yegor/Projects/intvw/users-table/src/components/SearchBar/SearchBar.tsx",[],"/Users/yegor/Projects/intvw/users-table/src/pages/EditUser/EditUser.tsx",["106"],"import { isEmpty, isEqual } from 'lodash';\nimport { useEffect, useMemo, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { getUserById, updateUserById } from '../../redux/actions/users.actions';\nimport styles from './EditUser.module.scss';\n\nconst EditUser = () => {\n    const dispatch = useDispatch();\n    const userData = useSelector((state: any) => state.users.selectedUser);\n    const history: any = useHistory();\n    const [userDataLocal, setUserDataLocal] = useState<any>({});\n    \n    useEffect(() => {\n        const userId = history?.location?.state?.userId;\n        userId && dispatch(getUserById(userId));\n    }, [])\n\n    useEffect(() => {\n        const data = {...userData};\n        delete data['id'];\n        delete data['account'];\n        delete data['accountName'];\n        setUserDataLocal(data);\n    }, [userData])\n\n    const onChangeInputHandler = (e: any) => {\n        setUserDataLocal({...userDataLocal, [e.target.name]: e.target.value});\n    }\n    \n    const updateUser = () => {\n        if(!isEmpty(userDataLocal)){\n            dispatch(updateUserById(userDataLocal, userData.id));\n        }\n    }\n\n    const checkIsDisabled = useMemo(() => isEqual(userData,userDataLocal), [userData, userDataLocal]);\n\n    return (\n        <div className={styles.container}>\n            {Object.entries(userDataLocal).map(([key, value]: any, idx) => {\n                return (\n                <div key={idx} className={styles.row}>\n                    <label htmlFor={key}>{key.toUpperCase()}</label>\n                    <input id={key}\n                        name={key}\n                        value={value}\n                        onChange={(e) => onChangeInputHandler(e)} />\n                </div>\n                ) \n            })}\n            <div className={styles.btnContainer}>\n                <button className={styles.submitBtn} disabled={checkIsDisabled} onClick={()=> updateUser()}>Update User</button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditUser;","/Users/yegor/Projects/intvw/users-table/src/components/EmptyData/Empty.tsx",[],"/Users/yegor/Projects/intvw/users-table/src/interfaces/core.interfaces.ts",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":18,"column":8,"nodeType":"113","endLine":18,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":14,"column":8,"nodeType":"113","endLine":14,"endColumn":10,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":18,"column":8,"nodeType":"113","endLine":18,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":40,"column":49,"nodeType":"121","endLine":40,"endColumn":90},{"ruleId":"119","severity":1,"message":"120","line":44,"column":49,"nodeType":"121","endLine":44,"endColumn":92},{"ruleId":"111","severity":1,"message":"122","line":17,"column":8,"nodeType":"113","endLine":17,"endColumn":10,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["127"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'history?.location?.state?.userId'. Either include them or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [history]",{"range":"137","text":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},{"range":"141","text":"140"},"Update the dependencies array to be: [dispatch, history?.location?.state?.userId]",{"range":"142","text":"143"},[629,631],"[history]",[558,560],"[dispatch]",[669,671],[707,709],"[dispatch, history?.location?.state?.userId]"]